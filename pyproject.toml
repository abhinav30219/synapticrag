[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "synapticrag"
version = "0.1.0"
description = "A hybrid RAG system combining LightRAG and MemoRAG approaches"
readme = "readme.md"
authors = [
    {name = "SynapticRAG Team"}
]
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]
keywords = ["rag", "memory", "graph", "nlp", "ai"]
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.47.0",
    "huggingface-hub>=0.26.5",
    "tokenizers>=0.21.0",
    "accelerate>=0.20.0",
    "networkx>=2.8.0",
    "torch-geometric>=2.3.0",
    "spacy>=3.6.0",
    "tiktoken>=0.3.0",
    "numpy>=1.24.0",
    "tqdm>=4.67.1",
    "pydantic>=2.0.0",
    "pydantic-core>=2.0.2",
    "typing-extensions>=4.6.1",
    "annotated-types>=0.4.0",
    "datasets>=2.0.0",
    "rouge>=1.0.0",
    "fuzzywuzzy>=0.18.0",
    "python-Levenshtein>=0.21.0",
    "semantic_text_splitter>=0.3.0",
    "langdetect>=1.0.9",
    "fsspec>=2024.9.0"
]

[project.optional-dependencies]
test = [
    "pytest>=7.3.0",
    "pytest-cov>=4.0.0"
]

[tool.setuptools]
packages = ["synaptic"]

[tool.setuptools.package-data]
"synaptic" = ["py.typed"]

[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
    "ignore::ImportWarning"
]
